type s1.ExternalDataSource {
  annotations {
    serviceid metadataType {
    }
    boolean hasMetaFile {
    }
    string folderType {
    }
    string folderContentType {
    }
    string suffix {
    }
    string dirName {
    }
  }
  string authProvider {
    foreignKeyDomain = [
      s1.AuthProvider,
    ]
  }
  string certificate {
    foreignKeyDomain = [
      s1.Certificate,
    ]
  }
  string customConfiguration {
  }
  s1.CustomHttpHeader customHttpHeaders {
  }
  string endpoint {
  }
  serviceid fullName {
  }
  boolean isWritable {
  }
  string label {
  }
  string oauthRefreshToken {
  }
  string oauthScope {
  }
  string oauthToken {
  }
  string password {
  }
  string principalType {
    _restriction = {
      enforce_value = false
      values = [
        "Anonymous",
        "NamedUser",
        "PerUser",
        "UserWithImpersonation",
      ]
    }
  }
  string protocol {
    _restriction = {
      enforce_value = false
      values = [
        "ApiKey",
        "AwsSv4",
        "C2c",
        "Certificate",
        "Jwt",
        "JwtExchange",
        "NTLM",
        "NoAuthentication",
        "Oauth",
        "Password",
      ]
    }
  }
  string repository {
  }
  string type {
    _restriction = {
      enforce_value = false
      values = [
        "Activity",
        "ActivityInsight",
        "ActivityParticipant",
        "ActivitySource",
        "ActivityTopic",
        "ActvtyInsightAction",
        "ActvtyInsightKeyword",
        "Alert",
        "AmazonDynamoDb",
        "AssetAttribute",
        "BTSuggestionFeedback",
        "BigObjectZosId",
        "CalendarSharing",
        "CartService",
        "CdpData",
        "CommerceOrder",
        "Conduit",
        "Consent",
        "ContentHubBox",
        "ContentHubGDrive",
        "ContentHubIsotope",
        "ContentHubMock",
        "ContentHubMockito",
        "ContentHubOneDriveGraph",
        "ContentHubPerf",
        "ContentHubQuip",
        "ContentHubSharepointOffice365",
        "ContentHubSharepointOneDrive",
        "ConvDefEventLog",
        "CustomMetadata",
        "DataFederationService",
        "Datacloud",
        "Datajourney",
        "EnInsightsFeedback",
        "Engagement",
        "EngagementPerson",
        "EventLogOlapService",
        "ExternalEvent",
        "ExternalReference",
        "FieldChangeSnapshot",
        "ForecastingItemPivot",
        "Ftest",
        "Identity",
        "InterestTag",
        "Jigsaw",
        "Limits",
        "LogoFeedback",
        "MasterProfile",
        "MenuItem",
        "MetadataCatalog",
        "MetadataComponentDependency",
        "OData",
        "OData4",
        "OData401",
        "OMS",
        "OpenSearch",
        "OpportunitySnapshot",
        "PECustMetrics",
        "Pardot",
        "PardotEntity",
        "Perms",
        "Pliny",
        "RecentFieldChange",
        "Salesforce",
        "SciApi",
        "SetupNode",
        "SfdcOrg",
        "Sharepoint",
        "SharepointOnline",
        "SimpleURL",
        "Trailhead",
        "TrailheadEdit",
        "TrailheadEditWithId",
        "VdaFtestVirtual",
        "VdaMockCdpData",
        "Wrapper",
        "Zero",
        "bcpApp",
        "bcpAppMember",
        "bcpEntity",
        "bcpEntityPermSet",
        "bcpEntityPermission",
        "bcpField",
        "bcpFieldPermission",
        "bcpMember",
        "bcpParticipant",
        "bcpParticipantAccess",
        "bcpPermissionSet",
        "bcpRecAccApproval",
        "bcpRecordAccess",
        "bcpRelParticipant",
        "bluetailfeedback",
        "conduitSubscriber",
        "contentHubItem",
        "cooper",
        "dataStatistics",
        "flexQueueItemInst",
        "forecastingUserPref",
        "layoutSectionStateDS",
        "listViewChartInst",
        "networkWorkspaceNode",
        "outgoingemail",
        "platformAction",
        "readonlyapp",
        "s2xmobileconfig",
        "salesforceIq",
        "userListPreference",
        "usermobileconfig",
        "usrconnectionstatus",
      ]
    }
    foreignKeyDomain = [
      s1.ApexClass,
    ]
  }
  string username {
  }
  string version {
  }
  string internalId {
    _hidden_value = true
    localOnly = true
  }
  suffix = "dataSource"
  dirName = "dataSources"
  metadataType = "ExternalDataSource"
}
